<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>EMT Handoff Trainer</title>
  <style>
    body { font-family: Arial, sans-serif; background: #eef6f9; padding: 20px; }
    .container { max-width: 700px; margin: auto; background: white; padding: 20px;
      border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
    textarea { width: 100%; height: 150px; margin-bottom: 15px; }
    button { padding: 10px 20px; font-size: 16px; margin-right: 10px;
      border: none; border-radius: 5px; cursor: pointer; }
    .mic-btn { background: #00bfa6; color: white; }
    .submit-btn { background: #0077cc; color: white; }
    #score-section { margin-top: 20px; padding: 15px; background: #f4f4f4;
      border-left: 4px solid #00bfa6; }
  </style>
</head>
<body>
  <div class="container">
    <h2>EMT-B Handoff Report Practice</h2>
    <textarea id="scenario" readonly>
56-year-old male, chest pain started while mowing lawn, 6/10 pressure radiating to jaw, A&O x3, BP 148/90, HR 98, RR 18, SpO2 95% RA, lungs clear, aspirin given, NRB 15L applied, ECG shows ST elevation in II, III, aVF.
    </textarea>
    <h3>Give Your Handoff Report</h3>
    <button class="mic-btn" onclick="startRecording()">ðŸŽ¤ Start Recording</button>
    <button class="submit-btn" onclick="submitReport()">Submit Report for Grading</button>
    <div id="transcription" style="margin-top: 15px;"></div>
    <div id="score-section" style="display: none;">
      <h4>Score Report</h4>
      <div id="score-output"></div>
    </div>
  </div>
  <script>
    let mediaRecorder; let audioChunks = [];
    async function startRecording() {
      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
      mediaRecorder = new MediaRecorder(stream);
      audioChunks = [];
      mediaRecorder.ondataavailable = event => audioChunks.push(event.data);
      mediaRecorder.onstop = async () => {
        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
        const formData = new FormData();
        formData.append('audio', audioBlob);
        const response = await fetch('/transcribe', { method: 'POST', body: formData });
        const result = await response.json();
        document.getElementById('transcription').innerHTML =
          `<p><strong>Transcription:</strong> ${result.transcript}</p>`;
        sessionStorage.setItem('handoffTranscript', result.transcript);
      };
      mediaRecorder.start(); setTimeout(() => mediaRecorder.stop(), 20000);
    }
    async function submitReport() {
      const transcript = sessionStorage.getItem('handoffTranscript') || '';
      if (!transcript) return alert('No transcription found. Please record your report.');
      const response = await fetch('/grade', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ transcript })
      });
      const result = await response.json();
      document.getElementById('score-output').innerHTML = result.feedback;
      document.getElementById('score-section').style.display = 'block';
    }
  </script>
</body>
</html>
